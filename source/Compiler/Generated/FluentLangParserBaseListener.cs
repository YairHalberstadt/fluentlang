//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ../grammar/FluentLangParser.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FluentLang.Compiler.Generated {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFluentLangParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class FluentLangParserBaseListener : IFluentLangParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilation_unit([NotNull] FluentLangParser.Compilation_unitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilation_unit([NotNull] FluentLangParser.Compilation_unitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.open_directives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen_directives([NotNull] FluentLangParser.Open_directivesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.open_directives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen_directives([NotNull] FluentLangParser.Open_directivesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.open_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen_directive([NotNull] FluentLangParser.Open_directiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.open_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen_directive([NotNull] FluentLangParser.Open_directiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.qualified_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_name([NotNull] FluentLangParser.Qualified_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.qualified_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_name([NotNull] FluentLangParser.Qualified_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.namespace_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_member_declaration([NotNull] FluentLangParser.Namespace_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.namespace_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_member_declaration([NotNull] FluentLangParser.Namespace_member_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.namespace_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_declaration([NotNull] FluentLangParser.Namespace_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.namespace_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_declaration([NotNull] FluentLangParser.Namespace_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.interface_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_declaration([NotNull] FluentLangParser.Interface_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.interface_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_declaration([NotNull] FluentLangParser.Interface_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_list([NotNull] FluentLangParser.Type_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_list([NotNull] FluentLangParser.Type_parameter_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter([NotNull] FluentLangParser.Type_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter([NotNull] FluentLangParser.Type_parameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.anonymous_interface_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymous_interface_declaration([NotNull] FluentLangParser.Anonymous_interface_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.anonymous_interface_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymous_interface_declaration([NotNull] FluentLangParser.Anonymous_interface_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.simple_anonymous_interface_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_anonymous_interface_declaration([NotNull] FluentLangParser.Simple_anonymous_interface_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.simple_anonymous_interface_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_anonymous_interface_declaration([NotNull] FluentLangParser.Simple_anonymous_interface_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.interface_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_member_declaration([NotNull] FluentLangParser.Interface_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.interface_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_member_declaration([NotNull] FluentLangParser.Interface_member_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.method_signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_signature([NotNull] FluentLangParser.Method_signatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.method_signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_signature([NotNull] FluentLangParser.Method_signatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] FluentLangParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] FluentLangParser.ParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] FluentLangParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] FluentLangParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_declaration([NotNull] FluentLangParser.Type_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_declaration([NotNull] FluentLangParser.Type_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] FluentLangParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] FluentLangParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.primitive_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitive_type([NotNull] FluentLangParser.Primitive_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.primitive_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitive_type([NotNull] FluentLangParser.Primitive_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.union"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnion([NotNull] FluentLangParser.UnionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.union"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnion([NotNull] FluentLangParser.UnionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.union_part_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnion_part_type([NotNull] FluentLangParser.Union_part_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.union_part_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnion_part_type([NotNull] FluentLangParser.Union_part_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_declaration([NotNull] FluentLangParser.Method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_declaration([NotNull] FluentLangParser.Method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.method_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_body([NotNull] FluentLangParser.Method_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.method_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_body([NotNull] FluentLangParser.Method_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.method_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_statement([NotNull] FluentLangParser.Method_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.method_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_statement([NotNull] FluentLangParser.Method_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.declaration_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration_statement([NotNull] FluentLangParser.Declaration_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.declaration_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration_statement([NotNull] FluentLangParser.Declaration_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_statement([NotNull] FluentLangParser.Return_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_statement([NotNull] FluentLangParser.Return_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>local_reference_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_reference_expression([NotNull] FluentLangParser.Local_reference_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>local_reference_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_reference_expression([NotNull] FluentLangParser.Local_reference_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binary_operator_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinary_operator_expression([NotNull] FluentLangParser.Binary_operator_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binary_operator_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinary_operator_expression([NotNull] FluentLangParser.Binary_operator_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>conditional_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_expression([NotNull] FluentLangParser.Conditional_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>conditional_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_expression([NotNull] FluentLangParser.Conditional_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesized_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesized_expression([NotNull] FluentLangParser.Parenthesized_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesized_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesized_expression([NotNull] FluentLangParser.Parenthesized_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>prefix_unary_operator_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefix_unary_operator_expression([NotNull] FluentLangParser.Prefix_unary_operator_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>prefix_unary_operator_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefix_unary_operator_expression([NotNull] FluentLangParser.Prefix_unary_operator_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>member_invocation_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_invocation_expression([NotNull] FluentLangParser.Member_invocation_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>member_invocation_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_invocation_expression([NotNull] FluentLangParser.Member_invocation_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>match_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatch_expression([NotNull] FluentLangParser.Match_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>match_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatch_expression([NotNull] FluentLangParser.Match_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>literal_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral_expression([NotNull] FluentLangParser.Literal_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>literal_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral_expression([NotNull] FluentLangParser.Literal_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>static_invocation_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatic_invocation_expression([NotNull] FluentLangParser.Static_invocation_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>static_invocation_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatic_invocation_expression([NotNull] FluentLangParser.Static_invocation_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>new_object_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNew_object_expression([NotNull] FluentLangParser.New_object_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>new_object_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNew_object_expression([NotNull] FluentLangParser.New_object_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>object_patching_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_patching_expression([NotNull] FluentLangParser.Object_patching_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>object_patching_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_patching_expression([NotNull] FluentLangParser.Object_patching_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.empty_interface"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmpty_interface([NotNull] FluentLangParser.Empty_interfaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.empty_interface"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmpty_interface([NotNull] FluentLangParser.Empty_interfaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.object_patch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_patch([NotNull] FluentLangParser.Object_patchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.object_patch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_patch([NotNull] FluentLangParser.Object_patchContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.fully_qualified_method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFully_qualified_method([NotNull] FluentLangParser.Fully_qualified_methodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.fully_qualified_method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFully_qualified_method([NotNull] FluentLangParser.Fully_qualified_methodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] FluentLangParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] FluentLangParser.OperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.prefix_unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefix_unary_operator([NotNull] FluentLangParser.Prefix_unary_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.prefix_unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefix_unary_operator([NotNull] FluentLangParser.Prefix_unary_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] FluentLangParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] FluentLangParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvocation([NotNull] FluentLangParser.InvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvocation([NotNull] FluentLangParser.InvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] FluentLangParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] FluentLangParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.match_expression_arm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatch_expression_arm([NotNull] FluentLangParser.Match_expression_armContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.match_expression_arm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatch_expression_arm([NotNull] FluentLangParser.Match_expression_armContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.parameter_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_metadata([NotNull] FluentLangParser.Parameter_metadataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.parameter_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_metadata([NotNull] FluentLangParser.Parameter_metadataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.return_type_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_type_metadata([NotNull] FluentLangParser.Return_type_metadataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.return_type_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_type_metadata([NotNull] FluentLangParser.Return_type_metadataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.anonymous_interface_declaration_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymous_interface_declaration_metadata([NotNull] FluentLangParser.Anonymous_interface_declaration_metadataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.anonymous_interface_declaration_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymous_interface_declaration_metadata([NotNull] FluentLangParser.Anonymous_interface_declaration_metadataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.type_parameter_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_metadata([NotNull] FluentLangParser.Type_parameter_metadataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.type_parameter_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_metadata([NotNull] FluentLangParser.Type_parameter_metadataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FluentLangParser.full_qualified_name_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFull_qualified_name_metadata([NotNull] FluentLangParser.Full_qualified_name_metadataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FluentLangParser.full_qualified_name_metadata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFull_qualified_name_metadata([NotNull] FluentLangParser.Full_qualified_name_metadataContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace FluentLang.Compiler.Generated
