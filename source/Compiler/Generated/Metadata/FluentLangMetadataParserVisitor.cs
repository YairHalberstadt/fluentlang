//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ../grammar/FluentLangMetadataParser.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FluentLang.Compiler.Generated.Metadata {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="FluentLangMetadataParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IFluentLangMetadataParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.parameter_metadata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter_metadata([NotNull] FluentLangMetadataParser.Parameter_metadataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.return_type_metadata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_type_metadata([NotNull] FluentLangMetadataParser.Return_type_metadataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.interface_method_metadata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_method_metadata([NotNull] FluentLangMetadataParser.Interface_method_metadataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.full_qualified_name_metadata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFull_qualified_name_metadata([NotNull] FluentLangMetadataParser.Full_qualified_name_metadataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] FluentLangMetadataParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] FluentLangMetadataParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_declaration([NotNull] FluentLangMetadataParser.Type_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] FluentLangMetadataParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.qualified_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualified_name([NotNull] FluentLangMetadataParser.Qualified_nameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.primitive_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitive_type([NotNull] FluentLangMetadataParser.Primitive_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.anonymous_interface_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_interface_declaration([NotNull] FluentLangMetadataParser.Anonymous_interface_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.simple_anonymous_interface_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimple_anonymous_interface_declaration([NotNull] FluentLangMetadataParser.Simple_anonymous_interface_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.interface_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_member_declaration([NotNull] FluentLangMetadataParser.Interface_member_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangMetadataParser.interface_method_signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_method_signature([NotNull] FluentLangMetadataParser.Interface_method_signatureContext context);
}
} // namespace FluentLang.Compiler.Generated.Metadata
