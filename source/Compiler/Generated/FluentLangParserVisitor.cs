//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\git\fluentlang\build-script\..\grammar\FluentLangParser.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FluentLang.Compiler.Generated {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="FluentLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IFluentLangParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilation_unit([NotNull] FluentLangParser.Compilation_unitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.open_directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpen_directives([NotNull] FluentLangParser.Open_directivesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.open_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpen_directive([NotNull] FluentLangParser.Open_directiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.qualified_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualified_name([NotNull] FluentLangParser.Qualified_nameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.namespace_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespace_member_declaration([NotNull] FluentLangParser.Namespace_member_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.namespace_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespace_declaration([NotNull] FluentLangParser.Namespace_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.interface_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_declaration([NotNull] FluentLangParser.Interface_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.type_parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_list([NotNull] FluentLangParser.Type_parameter_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.type_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter([NotNull] FluentLangParser.Type_parameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.anonymous_interface_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_interface_declaration([NotNull] FluentLangParser.Anonymous_interface_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.simple_anonymous_interface_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimple_anonymous_interface_declaration([NotNull] FluentLangParser.Simple_anonymous_interface_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.named_type_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamed_type_reference([NotNull] FluentLangParser.Named_type_referenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.type_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_argument_list([NotNull] FluentLangParser.Type_argument_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.interface_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_member_declaration([NotNull] FluentLangParser.Interface_member_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.method_signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_signature([NotNull] FluentLangParser.Method_signatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] FluentLangParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] FluentLangParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_declaration([NotNull] FluentLangParser.Type_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] FluentLangParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.primitive_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitive_type([NotNull] FluentLangParser.Primitive_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.union"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnion([NotNull] FluentLangParser.UnionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.union_part_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnion_part_type([NotNull] FluentLangParser.Union_part_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_declaration([NotNull] FluentLangParser.Method_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.method_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_body([NotNull] FluentLangParser.Method_bodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.method_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_statement([NotNull] FluentLangParser.Method_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.declaration_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration_statement([NotNull] FluentLangParser.Declaration_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_statement([NotNull] FluentLangParser.Return_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>local_reference_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_reference_expression([NotNull] FluentLangParser.Local_reference_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>binary_operator_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinary_operator_expression([NotNull] FluentLangParser.Binary_operator_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>conditional_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_expression([NotNull] FluentLangParser.Conditional_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesized_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesized_expression([NotNull] FluentLangParser.Parenthesized_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>prefix_unary_operator_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefix_unary_operator_expression([NotNull] FluentLangParser.Prefix_unary_operator_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>piped_static_invocation_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPiped_static_invocation_expression([NotNull] FluentLangParser.Piped_static_invocation_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>member_invocation_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_invocation_expression([NotNull] FluentLangParser.Member_invocation_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>match_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMatch_expression([NotNull] FluentLangParser.Match_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literal_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral_expression([NotNull] FluentLangParser.Literal_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>static_invocation_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatic_invocation_expression([NotNull] FluentLangParser.Static_invocation_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>new_object_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNew_object_expression([NotNull] FluentLangParser.New_object_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>object_patching_expression</c>
	/// labeled alternative in <see cref="FluentLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObject_patching_expression([NotNull] FluentLangParser.Object_patching_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.empty_interface"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmpty_interface([NotNull] FluentLangParser.Empty_interfaceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.object_patch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObject_patch([NotNull] FluentLangParser.Object_patchContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.method_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_reference([NotNull] FluentLangParser.Method_referenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator([NotNull] FluentLangParser.OperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.prefix_unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefix_unary_operator([NotNull] FluentLangParser.Prefix_unary_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] FluentLangParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInvocation([NotNull] FluentLangParser.InvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] FluentLangParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.match_expression_arm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMatch_expression_arm([NotNull] FluentLangParser.Match_expression_armContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.anonymous_interface_declaration_metadata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_interface_declaration_metadata([NotNull] FluentLangParser.Anonymous_interface_declaration_metadataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.type_parameter_metadata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_parameter_metadata([NotNull] FluentLangParser.Type_parameter_metadataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.method_signature_metadata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod_signature_metadata([NotNull] FluentLangParser.Method_signature_metadataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FluentLangParser.interface_method_metadata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_method_metadata([NotNull] FluentLangParser.Interface_method_metadataContext context);
}
} // namespace FluentLang.Compiler.Generated
